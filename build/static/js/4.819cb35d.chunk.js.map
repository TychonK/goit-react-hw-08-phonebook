{"version":3,"sources":["components/Navigation/AuthNav.js","components/Navigation/DefaultNav.js","components/Navigation/AppBar.js"],"names":["connect","state","loading","userReducer","dispatch","onLogout","config","authActions","userName","navigate","useNavigate","className","type","color","onClick","DefaultNav","to","AppBar","isLoggedIn","useSelector","user","name"],"mappings":"yRAmCA,IAYeA,eAZS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAME,YAAYD,YAIJ,SAAAE,GACzB,MAAO,CACLC,SAAU,SAACC,GAAD,OAAYF,EAASG,IAA8BD,QAIlDN,EAvCf,YAAmD,IAAhCQ,EAA+B,EAA/BA,SAAUN,EAAqB,EAArBA,QAASG,EAAY,EAAZA,SAE9BI,EAAWC,cAOf,OACI,qCACCR,GACD,qBAAKS,UAAU,2BAAf,SACI,cAAC,IAAD,CACIA,UAAU,kBACVC,KAAK,OACLC,MAAM,cAGd,sBAAKF,UAAU,eAAf,UACI,oBAAGA,UAAU,eAAb,sBAAqC,iCAAUH,IAA/C,OACA,wBAAQI,KAAK,SAASD,UAAU,uCAAuCG,QAjB1D,WACnBT,IACAI,EAAS,MAeH,8BC3BG,SAASM,IACpB,OACI,qCACI,cAAC,IAAD,CAASC,GAAG,YAAYL,UAAU,WAAlC,sBACA,cAAC,IAAD,CAASK,GAAG,SAASL,UAAU,WAA/B,uBCCG,SAASM,IAEpB,IAAMC,EAAaC,aAAY,SAAAlB,GAAK,OAAIA,EAAME,YAAYe,cACpDV,EAAWW,aAAY,SAAAlB,GAAK,OAAIA,EAAME,YAAYiB,KAAKC,QAE7D,OACI,qCACA,sBAAKV,UAAU,iBAAf,UACQ,cAAC,IAAD,CAASK,GAAG,IAAIL,UAAU,WAA1B,kBACA,cAAC,IAAD,CAASK,GAAG,YAAYL,UAAU,WAAlC,sBACCO,EAAa,cAAC,EAAD,CAASV,SAAWA,IAAgB,cAACO,EAAD,OAE1D","file":"static/js/4.819cb35d.chunk.js","sourcesContent":["import * as authActions from '../../redux/authActions'\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction AuthNav({ userName, loading, onLogout }) {\r\n\r\n  const navigate = useNavigate()\r\n    \r\n    const handleLogOut = () => {\r\n      onLogout()\r\n      navigate(\"/\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {loading &&\r\n        <div className=\"register-loader_backdrop\">\r\n            <Loader\r\n                className=\"register-loader\"\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n            />\r\n          </div>}\r\n        <div className=\"auth_content\">\r\n            <p className=\"welcome-text\">Welcome, <strong>{ userName }</strong>!</p>\r\n            <button type=\"button\" className=\"btn btn-primary hBack log-out_button\" onClick={handleLogOut}>Log Out</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.userReducer.loading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: (config) => dispatch(authActions.fetchOnUserLogout(config))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthNav)","import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function DefaultNav() {\r\n    return (\r\n        <>\r\n            <NavLink to=\"/register\" className=\"nav-link\">Register</NavLink>\r\n            <NavLink to=\"/login\" className=\"nav-link\">Log In</NavLink>\r\n        </>\r\n    )\r\n}","import { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport './Navigation.scss'\r\n\r\nimport AuthNav from './AuthNav'\r\nimport DefaultNav from './DefaultNav'\r\n\r\nexport default function AppBar() {\r\n    \r\n    const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\r\n    const userName = useSelector(state => state.userReducer.user.name)\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navigation-bar\">\r\n                <NavLink to=\"/\" className=\"nav-link\">Home</NavLink>\r\n                <NavLink to=\"/contacts\" className=\"nav-link\">Contacts</NavLink>\r\n                {isLoggedIn ? <AuthNav userName={ userName } /> : <DefaultNav />}\r\n        </nav>\r\n        <hr />\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}