{"version":3,"sources":["components/Register/Register.js"],"names":["connect","state","loading","userReducer","isLoggedIn","dispatch","onSubmit","userObj","authActions","useState","name","setName","mail","setMail","password","setPassword","navigate","useNavigate","useEffect","handleSubmit","e","a","preventDefault","email","type","onClick","className","color","onChange","target","value","required","pattern","title","to"],"mappings":"gSAyGeA,uBAbS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAME,YAAYD,QAC3BE,WAAYH,EAAME,YAAYC,eAIP,SAAAC,GACzB,MAAO,CACLC,SAAU,SAACC,GAAD,OAAaF,EAASG,IAAgCD,QAIrDP,EA3Ff,YAAoD,IAAjCE,EAAgC,EAAhCA,QAASE,EAAuB,EAAvBA,WAAYE,EAAW,EAAXA,SACpC,EAA0BG,mBAAS,IAAnC,mBAAQC,EAAR,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAQG,EAAR,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,IAA3C,mBAAQK,EAAR,KAAkBC,EAAlB,KAKMC,EAAWC,cAEjBC,qBAAU,WACJd,GACFY,EAAS,eAIV,CAACZ,IAEJ,IAUMe,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBD,EAAEE,iBACIf,EAAU,CAAEG,KAAMA,EAAMa,MAAOX,EAAME,SAAUA,GAFpC,SAGXR,EAASC,GAHE,OAIjBI,EAAQ,IACRE,EAAQ,IACRE,EAAY,IANK,2CAAH,sDASlB,OACI,qCACE,wBAAQS,KAAK,SAASC,QArBP,WACpBT,GAAU,IAoBwCU,UAAU,wBAAvD,4BADF,IAGexB,GACP,qBAAKwB,UAAU,2BAAf,SACI,cAAC,IAAD,CACIA,UAAU,kBACVF,KAAK,OACLG,MAAM,cAGpB,uBAAMD,UAAU,gBAAgBpB,SAAUa,EAAcS,SA3BzC,SAACR,GACA,SAAlBA,EAAES,OAAOnB,MAAmBC,EAAQS,EAAES,OAAOC,OAC3B,SAAlBV,EAAES,OAAOnB,MAAmBG,EAAQO,EAAES,OAAOC,OAC3B,aAAlBV,EAAES,OAAOnB,MAAuBK,EAAYK,EAAES,OAAOC,QAwBnD,UACE,wBAAOJ,UAAU,iBAAjB,UACI,mBAAGA,UAAU,YAAb,8BACI,mCAAOK,UAAQ,EAACP,KAAK,OAAOE,UAAU,iBAAiBhB,KAAK,OAAOoB,MAAQlB,GAA3E,OAAuF,UAC3F,qBAAKc,UAAU,WAAf,SACA,qBAAKA,UAAU,cAGnB,wBAAOA,UAAU,iBAAjB,UACI,mBAAGA,UAAU,YAAb,6BACI,uBAAOK,UAAQ,EAACP,KAAK,OAAOE,UAAU,iBAAiBhB,KAAK,OAAOoB,MAAQpB,IAC/E,qBAAKgB,UAAU,WAAf,SACA,qBAAKA,UAAU,cAGnB,wBAAOA,UAAU,iBAAjB,UACI,mBAAGA,UAAU,YAAb,iCACI,uBAAOK,UAAQ,EAACC,QAAQ,QAAQC,MAAM,6BAA6BT,KAAK,WAAWE,UAAU,iBAAiBhB,KAAK,WAAWoB,MAAQhB,IAC1I,qBAAKY,UAAU,WAAf,SACA,qBAAKA,UAAU,cAGrB,wBAAQF,KAAK,SAASE,UAAU,kBAAhC,sBACA,cAAC,IAAD,CAAMQ,GAAG,SAASR,UAAU,6BAA5B","file":"static/js/6.3cf21008.chunk.js","sourcesContent":["import './Register.scss'\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport * as authActions from '../../redux/authActions'\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Register({loading, isLoggedIn, onSubmit}) {\r\n    const [ name, setName ] = useState('')\r\n    const [ mail, setMail ] = useState('')\r\n    const [ password, setPassword ] = useState('')\r\n\r\n    //const { location } = useSelector(state=>state)\r\n    //const dispatch = useDispatch();\r\n\r\n    const navigate = useNavigate();\r\n  \r\n    useEffect(() => {\r\n      if (isLoggedIn) {\r\n        navigate(\"/contacts\")\r\n      } else {\r\n        return\r\n      }\r\n    }, [isLoggedIn])\r\n\r\n    const handleGoBack = () => {\r\n     navigate(-1)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        e.target.name === \"name\" && setName(e.target.value)\r\n        e.target.name === \"mail\" && setMail(e.target.value)\r\n        e.target.name === \"password\" && setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const userObj = { name: name, email: mail, password: password }\r\n        await onSubmit(userObj)\r\n        setName('')\r\n        setMail('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <button type=\"button\" onClick={handleGoBack} className=\"btn btn-primary hBack\">\r\n              &larr; Go back \r\n            </button> {loading &&\r\n                <div className=\"register-loader_backdrop\">\r\n                    <Loader\r\n                        className=\"register-loader\"\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                    />\r\n                </div>}\r\n          <form className=\"register-form\" onSubmit={handleSubmit} onChange={handleChange}>\r\n            <label className=\"register-label\">\r\n                <p className=\"label-txt\">ENTER YOUR EMAIL</p>\r\n                    <input required type=\"text\" className=\"register-input\" name=\"mail\" value={ mail } type=\"email\"/>\r\n                <div className=\"line-box\">\r\n                <div className=\"line\"></div>\r\n                </div>\r\n            </label>\r\n            <label className=\"register-label\">\r\n                <p className=\"label-txt\">ENTER YOUR NAME</p>\r\n                    <input required type=\"text\" className=\"register-input\" name=\"name\" value={ name }/>\r\n                <div className=\"line-box\">\r\n                <div className=\"line\"></div>\r\n                </div>\r\n            </label>\r\n            <label className=\"register-label\">\r\n                <p className=\"label-txt\">ENTER YOUR PASSWORD</p>\r\n                    <input required pattern=\".{7,}\" title=\"Enter minimum 7 characters\" type=\"password\" className=\"register-input\" name=\"password\" value={ password }/>\r\n                <div className=\"line-box\">\r\n                <div className=\"line\"></div>\r\n                </div>\r\n            </label>\r\n          <button type=\"submit\" className=\"register-button\">Register</button>\r\n          <Link to=\"/login\" className=\"register-button login-link\"> Log-in </Link>\r\n          </form>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.userReducer.loading,\r\n    isLoggedIn: state.userReducer.isLoggedIn\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (userObj) => dispatch(authActions.fetchOnUserRegister(userObj))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)"],"sourceRoot":""}