{"version":3,"sources":["redux/authActions.js","redux/api.js","redux/authStore.js","redux/store.js","PrivateRoute.js","PublicRoute.js","App.js","index.js","redux/contactsActions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","fetchStart","createAction","fetchSuccess","fetchFailure","fetchOnUserRegister","args","dispatch","post","then","response","data","swal","catch","err","status","fetchOnUserLogin","user","name","logoutFetchSuccess","logoutFetchFailure","fetchOnUserLogout","config","console","log","fetchCurrentUser","createAsyncThunk","_","thunkAPI","a","state","getState","persistedToken","userReducer","isRejectedWithValue","get","userSlice","createSlice","initialState","email","isLoggedIn","loading","isFetchingCurrentUser","extraReducers","registerActions","action","payload","pending","fulfilled","rejected","actions","setUser","contacts","createReducer","filter","target","value","newContacts","contact","id","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","PrivateRoute","children","useSelector","Swal","fire","to","PublicRoute","restricted","AppBar","lazy","NotFound","HomePage","Contacts","Register","Login","App","useDispatch","useEffect","fallback","className","path","element","ReactDOM","render","document","getElementById","deleteFetchSuccess","fetchOnPageLoad","r","addContact","deleteContact","contactId","delete"],"mappings":"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","file":"static/js/main.aaa4097d.chunk.js","sourcesContent":["import { createAction, isRejectedWithValue } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nimport { baseUrl } from './api'\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\naxios.defaults.baseURL = `${baseUrl}`\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `${token}`\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ''\r\n    },\r\n}\r\n\r\nexport const fetchStart = createAction('auth/FETCH_START')\r\nexport const fetchSuccess = createAction('auth/FETCH_SUCCESS')\r\nexport const fetchFailure = createAction('auth/FETCH_FAILURE')\r\n\r\nexport const fetchOnUserRegister = args => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post(`/users/signup`, args)\r\n        .then(response => response.data)\r\n        .then(data => {\r\n            dispatch(fetchSuccess(data))\r\n            token.set(data.token)\r\n            swal(\"Congratulations!\", `You have created an account!`, \"success\");\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchFailure())\r\n            swal(\"Oops!\", `Error ${err.response.status} occured.`, \"error\");\r\n        })\r\n}\r\n\r\nexport const fetchOnUserLogin = args => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post(`/users/login`, args)\r\n        .then(response => response.data)\r\n        .then(data => {\r\n            dispatch(fetchSuccess(data))\r\n            token.set(data.token)\r\n            swal(`Hello, ${data.user.name}`, `You have logged into your account!`, \"success\");\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchFailure())\r\n            swal(\"Oops! Wrong mail or password.\", `Error ${err.response.status} occured.`, \"error\");\r\n        })\r\n}\r\n\r\nexport const logoutFetchSuccess = createAction('logout/FETCH_SUCCESS')\r\nexport const logoutFetchFailure = createAction('logout/FETCH_FAILURE')\r\n\r\nexport const fetchOnUserLogout = config => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post(`/users/logout`, null)\r\n        .then(response => response)\r\n        .then(data => {\r\n            dispatch(logoutFetchSuccess())\r\n            swal(`Bye!`, `You have logged out of your account!`, \"success\");\r\n            token.unset()\r\n        })\r\n        .catch(err => {\r\n            dispatch(logoutFetchFailure())\r\n            console.log(err)\r\n            swal(\"Oops! Something went wrong\", `Error ${err.response.status} occured.`, \"error\");\r\n        })\r\n}\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\"auth/REFRESH\", async(_, thunkAPI) => {\r\n    const state = thunkAPI.getState()\r\n    const persistedToken = state.userReducer.token\r\n\r\n    if (persistedToken === '') {\r\n        console.log(\"no token = no fetch\")\r\n        return thunkAPI.isRejectedWithValue()\r\n    }\r\n    token.set(persistedToken)\r\n    try {\r\n        const {data} = await axios.get('/users/current')\r\n        return data\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n})","export const baseUrl = 'https://connections-api.herokuapp.com';","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport * as registerActions from './authActions'\r\n\r\nconst userSlice = createSlice({\r\n    name: 'register',\r\n    initialState: {\r\n        user: { name: '', email: '' },\r\n        token: '',\r\n        isLoggedIn: false,\r\n        loading: false,\r\n        isFetchingCurrentUser: false,\r\n    },\r\n    extraReducers: {\r\n        [registerActions.fetchStart]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        },\r\n        [registerActions.fetchSuccess]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isLoggedIn: true,\r\n                token: action.payload.token,\r\n                user: {name: action.payload.user.name, email: action.payload.user.email,},\r\n            }\r\n        },\r\n        [registerActions.fetchFailure]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        },\r\n        [registerActions.logoutFetchSuccess]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                user: { name: '', email: '' },\r\n                token: '',\r\n                isLoggedIn: false,\r\n                loading: false,\r\n            }\r\n        },\r\n        [registerActions.logoutFetchFailure]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        },\r\n        [registerActions.fetchCurrentUser.pending]: (state, action) => {\r\n            state.isFetchingCurrentUser = true;\r\n        },\r\n        [registerActions.fetchCurrentUser.fulfilled]: (state, action) => {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n        [registerActions.fetchCurrentUser.rejected]: (state, action) => {\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n    }\r\n});\r\n\r\nexport default userSlice.reducer\r\n\r\nexport const { setUser } = userSlice.actions","// import { createStore } from 'redux';\r\nimport { configureStore, createReducer } from '@reduxjs/toolkit'\r\nimport * as actions from './contactsActions'\r\nimport * as registerActions from './authActions'\r\nimport userReducer from './authStore'\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst initialState = { contacts: [], filter: '', loading: false, }\r\n\r\nconst contacts = createReducer(initialState, {\r\n    [actions.filter]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            filter: action.payload.target.value\r\n        };\r\n    },\r\n    [actions.fetchStart]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n        }\r\n    },\r\n    [actions.fetchSuccess]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            contacts: [...state.contacts, ...action.payload],\r\n        }\r\n    },\r\n    [actions.fetchFailure]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n        }\r\n    },\r\n    [actions.deleteFetchSuccess]: (state, action) => {\r\n        const newContacts = state.contacts.filter(contact => contact.id != action.payload)\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            contacts: newContacts\r\n        }\r\n    },\r\n    [registerActions.logoutFetchSuccess]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            contacts: []\r\n        }\r\n    },\r\n})\r\n\r\nconst authPersistConfig = {\r\n    key: \"auth\",\r\n    storage,\r\n    whitelist: ['token'],\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contacts,\r\n        userReducer: persistReducer(authPersistConfig, userReducer)\r\n    },\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store;\r\n\r\n// const reducer = (state = initialState, action) => {\r\n//     console.log(action)\r\n//     switch (action.type) {\r\n//         case 'form/addContact':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: [...state.contacts, action.payload]\r\n//             };\r\n\r\n//         case 'form/deleteContact':\r\n//             const contactsList = state.contacts.filter(contact => contact.name !== action.payload.target.id);\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: contactsList\r\n//             };\r\n        \r\n//         case 'filter/changeFilter':\r\n//             return {\r\n//                 ...state,\r\n//                 filter: action.payload.target.value\r\n//             };\r\n        \r\n//         case 'page/pageLoaded':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: action.payload\r\n//             }\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// const store = createStore(reducer, composeWithDevTools());","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function PrivateRoute({children}) {\r\n    const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn)\r\n    console.log(isLoggedIn)\r\n    if (!isLoggedIn) {\r\n        Swal.fire('You are not logged in yet',\r\n            `Please login or create an accound before accessing your contacts`,\r\n            'question')\r\n    }\r\n    return (\r\n            isLoggedIn ? children : <Navigate to=\"/register\" />\r\n    )\r\n}","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport default function PublicRoute({children, restricted = false}) {\r\n    const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn)\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n            shouldRedirect ? <Navigate to=\"/\" /> : children\r\n    )\r\n}","import './App.scss';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\"\r\n\r\n// import AppBar from './components/Navigation/AppBar'\r\n// import NotFound from './components/Not_Found/NotFound';\r\n// import HomePage from './components/HomePage';\r\n// import Contacts from './components/Contacts';\r\n// import Register from './components/Register/Register';\r\n// import Login from './components/LogIn/Login';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor } from './redux/store'\r\n\r\nimport { useEffect, lazy, Suspense } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchCurrentUser } from './redux/authActions'\r\n\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst AppBar = lazy(() => import('./components/Navigation/AppBar'))\r\nconst NotFound = lazy(() => import('./components/Not_Found/NotFound'))\r\nconst HomePage = lazy(() => import('./components/Home/HomePage'))\r\nconst Contacts = lazy(() => import('./components/Contacts'))\r\nconst Register = lazy(() => import('./components/Register/Register'))\r\nconst Login = lazy(() => import('./components/LogIn/Login'))\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(state => state.userReducer.isFetchingCurrentUser)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUser())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Suspense fallback={<Loader className=\"fallback-loader\" />}>\r\n        <BrowserRouter>\r\n          <AppBar />\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            \r\n            <Route path=\"/register\" element={\r\n              <PublicRoute restricted>\r\n                <Register />\r\n              </PublicRoute>\r\n            } />\r\n              \r\n            <Route path=\"/login\" element={\r\n              <PublicRoute restricted>\r\n                <Login />\r\n              </PublicRoute>\r\n            } />\r\n\r\n            <Route path=\"/contacts\" element={\r\n              <PrivateRoute>\r\n                <Contacts />\r\n              </PrivateRoute>\r\n            } />\r\n            \r\n            <Route path=\"*\" element={<NotFound />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Suspense>\r\n    </PersistGate> )\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createAction } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\n// const addContact = (value) => ({\r\n//     type: 'form/addContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const deleteContact = (value) => ({\r\n//     type: 'form/deleteContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const filter = (value) => ({\r\n//     type: 'filter/changeFilter',\r\n//     payload: value,\r\n// })\r\n\r\n// const pageLoaded = (value) => ({\r\n//     type: 'page/pageLoaded',\r\n//     payload: value,\r\n// })\r\n\r\n//export const addContact = createAction('form/addContact')\r\n//export const pageLoaded = createAction('page/pageLoaded')\r\n//export const deleteContact = createAction('form/deleteContact')\r\n\r\nexport const filter = createAction('filter/changeFilter')\r\n\r\nexport const fetchStart = createAction('contacts/FETCH_START')\r\nexport const fetchSuccess = createAction('contacts/FETCH_SUCCESS')\r\nexport const fetchFailure = createAction('contacts/FETCH_FAILURE')\r\nexport const deleteFetchSuccess = createAction('contacts/FETCH_DELETE_SUCCESS')\r\n\r\nexport const fetchOnPageLoad = args => dispatch => {\r\n  dispatch(fetchStart());\r\n\r\n  axios.get('/contacts')\r\n    .then(r => r.data)\r\n      .then(data => {\r\n          console.log(data)\r\n          dispatch(fetchSuccess(data))\r\n      })\r\n      .catch(err => {\r\n          console.log(\"Error fetching contacts:\", err)\r\n          dispatch(fetchFailure(err))\r\n      });\r\n};\r\n\r\nexport const addContact = args => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post('/contacts', args)\r\n        .then(r => r.data)\r\n        .then(data => {\r\n            console.log(data)\r\n            dispatch(fetchSuccess([data]))\r\n        })\r\n      .catch(err => {\r\n          console.log(\"Error posting contact:\", err)\r\n          dispatch(fetchFailure(err))\r\n      });\r\n}\r\n\r\nexport const deleteContact = args => dispatch => {\r\n    const contactId = args.target.id\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(dispatch(fetchStart()))\r\n        .then(r => r.data)\r\n        .then(data => dispatch(deleteFetchSuccess(contactId)))\r\n        .catch(err => {\r\n            console.log(\"Error deleting contact:\", err)\r\n            dispatch(fetchFailure(err))\r\n        });\r\n}"],"sourceRoot":""}