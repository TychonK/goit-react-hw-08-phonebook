{"version":3,"sources":["redux/authStore.js","redux/store.js","PrivateRoute.js","PublicRoute.js","App.js","index.js","redux/authActions.js","redux/api.js","redux/contactsActions.js"],"names":["userSlice","createSlice","name","initialState","user","email","token","isLoggedIn","loading","isFetchingCurrentUser","extraReducers","registerActions","state","action","payload","pending","fulfilled","rejected","actions","setUser","contacts","createReducer","filter","target","value","newContacts","contact","id","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","userReducer","persistReducer","devTools","process","persistor","persistStore","PrivateRoute","children","useSelector","console","log","Swal","fire","to","PublicRoute","restricted","AppBar","lazy","NotFound","HomePage","Contacts","Register","Login","App","dispatch","useDispatch","useEffect","fetchCurrentUser","fallback","className","path","element","ReactDOM","render","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","fetchStart","createAction","fetchSuccess","fetchFailure","fetchOnUserRegister","args","post","then","response","data","swal","catch","err","status","fetchOnUserLogin","logoutFetchSuccess","logoutFetchFailure","fetchOnUserLogout","config","createAsyncThunk","_","thunkAPI","a","getState","persistedToken","isRejectedWithValue","get","deleteFetchSuccess","fetchOnPageLoad","r","addContact","deleteContact","contactId","delete"],"mappings":"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","file":"static/js/main.92cf3205.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nimport * as registerActions from './authActions'\r\n\r\nconst userSlice = createSlice({\r\n    name: 'register',\r\n    initialState: {\r\n        user: { name: '', email: '' },\r\n        token: '',\r\n        isLoggedIn: false,\r\n        loading: false,\r\n        isFetchingCurrentUser: false,\r\n    },\r\n    extraReducers: {\r\n        [registerActions.fetchStart]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        },\r\n        [registerActions.fetchSuccess]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isLoggedIn: true,\r\n                token: action.payload.token,\r\n                user: {name: action.payload.user.name, email: action.payload.user.email,},\r\n            }\r\n        },\r\n        [registerActions.fetchFailure]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        },\r\n        [registerActions.logoutFetchSuccess]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                user: { name: '', email: '' },\r\n                token: '',\r\n                isLoggedIn: false,\r\n                loading: false,\r\n            }\r\n        },\r\n        [registerActions.logoutFetchFailure]: (state, action) => {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        },\r\n        [registerActions.fetchCurrentUser.pending]: (state, action) => {\r\n            state.isFetchingCurrentUser = true;\r\n        },\r\n        [registerActions.fetchCurrentUser.fulfilled]: (state, action) => {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n        [registerActions.fetchCurrentUser.rejected]: (state, action) => {\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n    }\r\n});\r\n\r\nexport default userSlice.reducer\r\n\r\nexport const { setUser } = userSlice.actions","// import { createStore } from 'redux';\r\nimport { configureStore, createReducer } from '@reduxjs/toolkit'\r\nimport * as actions from './contactsActions'\r\nimport logger from 'redux-logger'\r\nimport userReducer from './authStore'\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst initialState = { contacts: [], filter: '', loading: false, }\r\n\r\nconst contacts = createReducer(initialState, {\r\n    [actions.filter]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            filter: action.payload.target.value\r\n        };\r\n    },\r\n    [actions.fetchStart]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n        }\r\n    },\r\n    [actions.fetchSuccess]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            contacts: [...state.contacts, ...action.payload],\r\n        }\r\n    },\r\n    [actions.fetchFailure]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n        }\r\n    },\r\n    [actions.deleteFetchSuccess]: (state, action) => {\r\n        const newContacts = state.contacts.filter(contact => contact.id != action.payload)\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            contacts: newContacts\r\n        }\r\n    },\r\n})\r\n\r\nconst authPersistConfig = {\r\n    key: \"auth\",\r\n    storage,\r\n    whitelist: ['token'],\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contacts,\r\n        userReducer: persistReducer(authPersistConfig, userReducer)\r\n    },\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store;\r\n\r\n// const reducer = (state = initialState, action) => {\r\n//     console.log(action)\r\n//     switch (action.type) {\r\n//         case 'form/addContact':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: [...state.contacts, action.payload]\r\n//             };\r\n\r\n//         case 'form/deleteContact':\r\n//             const contactsList = state.contacts.filter(contact => contact.name !== action.payload.target.id);\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: contactsList\r\n//             };\r\n        \r\n//         case 'filter/changeFilter':\r\n//             return {\r\n//                 ...state,\r\n//                 filter: action.payload.target.value\r\n//             };\r\n        \r\n//         case 'page/pageLoaded':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: action.payload\r\n//             }\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// const store = createStore(reducer, composeWithDevTools());","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default function PrivateRoute({children}) {\r\n    const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn)\r\n    console.log(isLoggedIn)\r\n    if (!isLoggedIn) {\r\n        Swal.fire('You are not logged in yet',\r\n            `Please login or create and accound before accessing your contacts`,\r\n            'question')\r\n    }\r\n    return (\r\n            isLoggedIn ? children : <Navigate to=\"/register\" />\r\n    )\r\n}","import { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport default function PublicRoute({children, restricted = false}) {\r\n    const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn)\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n            shouldRedirect ? <Navigate to=\"/\" /> : children\r\n    )\r\n}","import './App.scss';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\"\r\n\r\n// import AppBar from './components/Navigation/AppBar'\r\n// import NotFound from './components/Not_Found/NotFound';\r\n// import HomePage from './components/HomePage';\r\n// import Contacts from './components/Contacts';\r\n// import Register from './components/Register/Register';\r\n// import Login from './components/LogIn/Login';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor } from './redux/store'\r\n\r\nimport { useEffect, lazy, Suspense } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchCurrentUser } from './redux/authActions'\r\n\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst AppBar = lazy(() => import('./components/Navigation/AppBar'))\r\nconst NotFound = lazy(() => import('./components/Not_Found/NotFound'))\r\nconst HomePage = lazy(() => import('./components/Home/HomePage'))\r\nconst Contacts = lazy(() => import('./components/Contacts'))\r\nconst Register = lazy(() => import('./components/Register/Register'))\r\nconst Login = lazy(() => import('./components/LogIn/Login'))\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(state => state.userReducer.isFetchingCurrentUser)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUser())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Suspense fallback={<Loader className=\"fallback-loader\" />}>\r\n        <BrowserRouter>\r\n          <AppBar />\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            \r\n            <Route path=\"/register\" element={\r\n              <PublicRoute restricted>\r\n                <Register />\r\n              </PublicRoute>\r\n            } />\r\n              \r\n            <Route path=\"/login\" element={\r\n              <PublicRoute restricted>\r\n                <Login />\r\n              </PublicRoute>\r\n            } />\r\n\r\n            <Route path=\"/contacts\" element={\r\n              <PrivateRoute>\r\n                <Contacts />\r\n              </PrivateRoute>\r\n            } />\r\n            \r\n            <Route path=\"*\" element={<NotFound />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </Suspense>\r\n    </PersistGate> )\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createAction, isRejectedWithValue } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nimport { baseUrl } from './api'\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\naxios.defaults.baseURL = `${baseUrl}`\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `${token}`\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ''\r\n    },\r\n}\r\n\r\nexport const fetchStart = createAction('auth/FETCH_START')\r\nexport const fetchSuccess = createAction('auth/FETCH_SUCCESS')\r\nexport const fetchFailure = createAction('auth/FETCH_FAILURE')\r\n\r\nexport const fetchOnUserRegister = args => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post(`/users/signup`, args)\r\n        .then(response => response.data)\r\n        .then(data => {\r\n            dispatch(fetchSuccess(data))\r\n            token.set(data.token)\r\n            swal(\"Congratulations!\", `You have created an account!`, \"success\");\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchFailure())\r\n            swal(\"Oops!\", `Error ${err.response.status} occured.`, \"error\");\r\n        })\r\n}\r\n\r\nexport const fetchOnUserLogin = args => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post(`/users/login`, args)\r\n        .then(response => response.data)\r\n        .then(data => {\r\n            dispatch(fetchSuccess(data))\r\n            token.set(data.token)\r\n            swal(`Hello, ${data.user.name}`, `You have logged into your account!`, \"success\");\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchFailure())\r\n            swal(\"Oops! Wrong mail or password.\", `Error ${err.response.status} occured.`, \"error\");\r\n        })\r\n}\r\n\r\nexport const logoutFetchSuccess = createAction('logout/FETCH_SUCCESS')\r\nexport const logoutFetchFailure = createAction('logout/FETCH_FAILURE')\r\n\r\nexport const fetchOnUserLogout = config => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post(`/users/logout`, null)\r\n        .then(response => response)\r\n        .then(data => {\r\n            dispatch(logoutFetchSuccess())\r\n            swal(`Bye!`, `You have logged out of your account!`, \"success\");\r\n            token.unset()\r\n        })\r\n        .catch(err => {\r\n            dispatch(logoutFetchFailure())\r\n            console.log(err)\r\n            swal(\"Oops! Something went wrong\", `Error ${err.response.status} occured.`, \"error\");\r\n        })\r\n}\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\"auth/REFRESH\", async(_, thunkAPI) => {\r\n    const state = thunkAPI.getState()\r\n    const persistedToken = state.userReducer.token\r\n\r\n    if (persistedToken === '') {\r\n        console.log(\"no token = no fetch\")\r\n        return thunkAPI.isRejectedWithValue()\r\n    }\r\n    token.set(persistedToken)\r\n    try {\r\n        const {data} = await axios.get('/users/current')\r\n        return data\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n})","export const baseUrl = 'https://connections-api.herokuapp.com';","import { createAction } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\n// const addContact = (value) => ({\r\n//     type: 'form/addContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const deleteContact = (value) => ({\r\n//     type: 'form/deleteContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const filter = (value) => ({\r\n//     type: 'filter/changeFilter',\r\n//     payload: value,\r\n// })\r\n\r\n// const pageLoaded = (value) => ({\r\n//     type: 'page/pageLoaded',\r\n//     payload: value,\r\n// })\r\n\r\n//export const addContact = createAction('form/addContact')\r\n//export const pageLoaded = createAction('page/pageLoaded')\r\n//export const deleteContact = createAction('form/deleteContact')\r\n\r\nexport const filter = createAction('filter/changeFilter')\r\n\r\nexport const fetchStart = createAction('contacts/FETCH_START')\r\nexport const fetchSuccess = createAction('contacts/FETCH_SUCCESS')\r\nexport const fetchFailure = createAction('contacts/FETCH_FAILURE')\r\nexport const deleteFetchSuccess = createAction('contacts/FETCH_DELETE_SUCCESS')\r\n\r\nexport const fetchOnPageLoad = args => dispatch => {\r\n  dispatch(fetchStart());\r\n\r\n  axios.get('/contacts')\r\n    .then(r => r.data)\r\n      .then(data => {\r\n          console.log(data)\r\n          dispatch(fetchSuccess(data))\r\n      })\r\n      .catch(err => {\r\n          console.log(\"Error fetching contacts:\", err)\r\n          dispatch(fetchFailure(err))\r\n      });\r\n};\r\n\r\nexport const addContact = args => dispatch => {\r\n    dispatch(fetchStart())\r\n    axios.post('/contacts', args)\r\n        .then(r => r.data)\r\n        .then(data => {\r\n            console.log(data)\r\n            dispatch(fetchSuccess([data]))\r\n        })\r\n      .catch(err => {\r\n          console.log(\"Error posting contact:\", err)\r\n          dispatch(fetchFailure(err))\r\n      });\r\n}\r\n\r\nexport const deleteContact = args => dispatch => {\r\n    const contactId = args.target.id\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(dispatch(fetchStart()))\r\n        .then(r => r.data)\r\n        .then(data => dispatch(deleteFetchSuccess(contactId)))\r\n        .catch(err => {\r\n            console.log(\"Error deleting contact:\", err)\r\n            dispatch(fetchFailure(err))\r\n        });\r\n}"],"sourceRoot":""}