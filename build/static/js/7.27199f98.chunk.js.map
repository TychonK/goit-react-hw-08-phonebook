{"version":3,"sources":["components/Contacts_List/ListItems.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts.js"],"names":["getRandomValues","connect","state","arr","contacts","filterWord","filter","dispatch","deleteContact","e","actions","val","name","toLowerCase","includes","map","index","number","className","id","type","onClick","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","offset","arguments","length","undefined","TypeError","v4","options","buf","rnds","random","onSubmit","obj","existing","nameId","numberId","useState","setName","setNumber","preventDefault","some","alert","htmlFor","value","placeholder","pattern","title","required","onChange","target","handleSearch","loading","onLoad","useEffect","navigate","useNavigate","color","height","width"],"mappings":"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","file":"static/js/7.27199f98.chunk.js","sourcesContent":["import { connect } from 'react-redux'\r\nimport * as actions from '../../redux/contactsActions'\r\n\r\nfunction ListItems({ arr, filterWord, deleteContact }) {\r\n    const listMarkup = arr.filter((val) => {\r\n        if (filterWord === \"\") {\r\n            return val\r\n        } else if (val.name.toLowerCase().includes(filterWord.toLowerCase())) {\r\n            return val\r\n        }\r\n    }).map((val, index) => {\r\n        return (\r\n            <li key={index}>{val.name}: {val.number}\r\n                <button className=\"btn btn-danger delete-button\" id={val.id} type=\"button\" onClick={deleteContact}>Delete</button>\r\n            </li>  \r\n        )\r\n    })     \r\n    return (\r\n        listMarkup\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        arr: state.contacts.contacts,\r\n        filterWord: state.contacts.filter,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteContact: (e) => dispatch(actions.deleteContact(e))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItems);","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport * as actions from '../../redux/contactsActions'\r\n\r\nfunction Form({ onSubmit, existing }) {\r\n    const nameId = uuid()\r\n    const numberId = uuid()\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleContactName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleContactNumber = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      \r\n        if (existing.some(e => e.name === name)) {\r\n            alert(`${name} already exists.`)\r\n            return\r\n      }\r\n      \r\n        const obj = {\r\n          name: name,\r\n          number: number,\r\n        }\r\n\r\n        onSubmit(obj)\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor={nameId}>\r\n            <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n              name=\"name\"\r\n              id={nameId}\r\n              value={name}\r\n              placeholder=\"Enter contact's name...\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              className=\"form-control\"\r\n              required\r\n              onChange={handleContactName}\r\n          />\r\n          </label>\r\n          <label htmlFor={numberId}>\r\n            <h2>Number</h2>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={numberId}\r\n              value={number}\r\n              placeholder=\"Enter contact's number...\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={handleContactNumber}\r\n            />\r\n\r\n          </label>\r\n          <button className=\"btn btn-primary add-button\" type=\"submit\">Add contact</button>\r\n        </form>\r\n      )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (obj) => dispatch(actions.addContact(obj))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form)","import { connect } from \"react-redux\"\r\nimport * as actions from '../../redux/contactsActions'\r\n\r\nfunction Filter({handleSearch}) {\r\n\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            name=\"nameSearch\"\r\n            placeholder=\"Enter name\"\r\n            onChange={handleSearch}\r\n            className=\"form-control filter-input\"\r\n        />\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleSearch: (e) => dispatch(actions.filter(e))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport ListItems from './Contacts_List/ListItems'\r\nimport Form from './Form/Form'\r\nimport Filter from './Filter/Filter'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../redux/contactsActions'\r\n\r\nfunction Contacts({ contacts, filter, loading, onLoad }) {\r\n    useEffect(() => {\r\n        if (contacts.length === 0) {\r\n            onLoad()\r\n        } else {\r\n            return\r\n        }   \r\n    }, [])\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleGoBack = () => {\r\n     navigate(-1)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <button type=\"button\" onClick={handleGoBack} className=\"btn btn-primary hBack\">\r\n              &larr; Go back \r\n            </button>\r\n          <div className=\"App\">\r\n            <Form existing={contacts} />\r\n            \r\n            <h2>Contacts</h2>\r\n            <h3>Find contacts by name</h3>\r\n\r\n            <Filter filter={filter} />\r\n            \r\n            <ul>\r\n                {loading && <Loader\r\n                    className=\"loader\"\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                />}\r\n\r\n                <ListItems arr={contacts} filter={filter} />\r\n                \r\n            </ul>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.contacts,\r\n    filter: state.contacts.filter,\r\n    loading: state.contacts.loading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLoad: () => dispatch(actions.fetchOnPageLoad())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts)"],"sourceRoot":""}