{"version":3,"sources":["redux/actions.js","components/Contacts_List/ListItems.js","components/Form/Form.js","components/Filter/Filter.js","App.js","redux/store.js","index.js"],"names":["filter","createAction","fetchStart","fetchSuccess","fetchFailure","deleteFetchSuccess","connect","state","arr","contacts","filterWord","dispatch","deleteContact","e","args","contact","target","id","axios","delete","then","r","data","catch","err","console","log","val","name","toLowerCase","includes","map","index","phone","className","type","onClick","onSubmit","obj","post","existing","nameId","uuid","numberId","useState","setName","number","setNumber","preventDefault","some","alert","htmlFor","value","placeholder","pattern","title","required","onChange","handleSearch","actions","loading","onLoad","useEffect","color","height","width","reducer","createReducer","action","payload","newContacts","store","configureStore","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc7eac34.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\n// const addContact = (value) => ({\r\n//     type: 'form/addContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const deleteContact = (value) => ({\r\n//     type: 'form/deleteContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const filter = (value) => ({\r\n//     type: 'filter/changeFilter',\r\n//     payload: value,\r\n// })\r\n\r\n// const pageLoaded = (value) => ({\r\n//     type: 'page/pageLoaded',\r\n//     payload: value,\r\n// })\r\n\r\n//export const addContact = createAction('form/addContact')\r\n//export const pageLoaded = createAction('page/pageLoaded')\r\n//export const deleteContact = createAction('form/deleteContact')\r\n\r\nexport const filter = createAction('filter/changeFilter')\r\n\r\nexport const fetchStart = createAction('page/FETCH_START')\r\nexport const fetchSuccess = createAction('page/FETCH_SUCCESS')\r\nexport const fetchFailure = createAction('page/FETCH_FAILURE')\r\nexport const deleteFetchSuccess = createAction('page/FETCH_DELETE_SUCCESS')\r\n\r\nexport const fetchOnPageLoad = args => dispatch => {\r\n  dispatch(fetchStart());\r\n\r\n  axios('https://6196735baf46280017e7e0cd.mockapi.io/phonebook/contacts')\r\n    .then(r => r.data)\r\n    .then(data => dispatch(fetchSuccess(data)))\r\n      .catch(err => {\r\n          console.log(\"Error fetching contacts:\", err)\r\n          dispatch(fetchFailure(err))\r\n      });\r\n};\r\n\r\nexport const addContact = args => dispatch => {\r\n    axios\r\n        .post('https://6196735baf46280017e7e0cd.mockapi.io/phonebook/contacts', args)\r\n        .then(dispatch(fetchStart()))\r\n        .then(r => r.data)\r\n        .then(data => dispatch(fetchSuccess([data])))\r\n      .catch(err => {\r\n          console.log(\"Error posting contact:\", err)\r\n          dispatch(fetchFailure(err))\r\n      });\r\n}\r\n\r\nexport const deleteContact = args => dispatch => {\r\n    const contact = args.target.id\r\n    axios\r\n        .delete(`https://6196735baf46280017e7e0cd.mockapi.io/phonebook/contacts/${contact}`)\r\n        .then(dispatch(fetchStart()))\r\n        .then(r => r.data)\r\n        .then(data => dispatch(deleteFetchSuccess(data)))\r\n        .catch(err => {\r\n            console.log(\"Error deleting contact:\", err)\r\n            dispatch(fetchFailure(err))\r\n        });\r\n}","import { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actions'\r\n\r\nfunction ListItems({ arr, filterWord, deleteContact }) {\r\n    const listMarkup = arr.filter((val) => {\r\n        if (filterWord === \"\") {\r\n            return val\r\n        } else if (val.name.toLowerCase().includes(filterWord.toLowerCase())) {\r\n            return val\r\n        }\r\n    }).map((val, index) => {\r\n        return (\r\n            <li key={index}>{val.name}: {val.phone}\r\n                <button className=\"delete-button\" id={val.id} type=\"button\" onClick={deleteContact}>Delete</button>\r\n            </li>  \r\n        )\r\n    })     \r\n    return (\r\n        listMarkup\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        arr: state.contacts,\r\n        filterWord: state.filter,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteContact: (e) => dispatch(actions.deleteContact(e))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItems);","import { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport * as actions from '../../redux/actions'\r\n\r\nfunction Form({ onSubmit, existing }) {\r\n    const nameId = uuid()\r\n    const numberId = uuid()\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleContactName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleContactNumber = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      \r\n        if (existing.some(e => e.name === name)) {\r\n            alert(`${name} already exists.`)\r\n            return\r\n      }\r\n      \r\n        const obj = {\r\n          name: name,\r\n          phone: number,\r\n        }\r\n\r\n        onSubmit(obj)\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor={nameId}>\r\n            <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n              name=\"name\"\r\n              id={nameId}\r\n              value={name}\r\n            placeholder=\"Enter contact's name...\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={handleContactName}\r\n          />\r\n          </label>\r\n          <label htmlFor={numberId}>\r\n            <h2>Number</h2>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={numberId}\r\n              value={number}\r\n              placeholder=\"Enter contact's number...\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleContactNumber}\r\n            />\r\n\r\n          </label>\r\n          <button className=\"add-button\" type=\"submit\">Add contact</button>\r\n        </form>\r\n      )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (obj) => dispatch(actions.addContact(obj))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form)","import { connect } from \"react-redux\"\r\nimport * as actions from '../../redux/actions'\r\n\r\nfunction Filter({handleSearch}) {\r\n\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            name=\"nameSearch\"\r\n            placeholder=\"Enter name\"\r\n            onChange={handleSearch}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleSearch: (e) => dispatch(actions.filter(e))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","import './App.scss';\r\nimport { useEffect } from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport ListItems from './components/Contacts_List/ListItems'\r\nimport Form from './components/Form/Form'\r\nimport Filter from './components/Filter/Filter'\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as actions from './redux/actions'\r\n\r\nfunction App({ contacts, filter, loading, onLoad }) {\r\n\r\n  useEffect(() => {\r\n    onLoad()\r\n  }, [])\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Form existing={contacts}/>\r\n        <h2>Contacts</h2>\r\n        <h3>Find contacts by name</h3>\r\n        <Filter filter={filter}/>\r\n        <ul>\r\n          {loading && <Loader\r\n            className=\"loader\"\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          />}\r\n          <ListItems arr={contacts} filter={filter} />\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n    filter: state.filter,\r\n    loading: state.loading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLoad: () => dispatch(actions.fetchOnPageLoad())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// import { createStore } from 'redux';\r\nimport { configureStore, createReducer } from '@reduxjs/toolkit'\r\nimport * as actions from './actions'\r\nimport logger from 'redux-logger'\r\n\r\nconst initialState = { contacts: [], filter: '', loading: false, }\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [actions.filter]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            filter: action.payload.target.value\r\n        };\r\n    },\r\n    [actions.fetchStart]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n        }\r\n    },\r\n    [actions.fetchSuccess]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            contacts: [...state.contacts, ...action.payload],\r\n        }\r\n    },\r\n    [actions.fetchFailure]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n        }\r\n    },\r\n    [actions.deleteFetchSuccess]: (state, action) => {\r\n        const newContacts = state.contacts.filter(contact => contact.name != action.payload.name)\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            contacts: newContacts\r\n        }\r\n    },\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: reducer,\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport default store;\r\n\r\n// const reducer = (state = initialState, action) => {\r\n//     console.log(action)\r\n//     switch (action.type) {\r\n//         case 'form/addContact':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: [...state.contacts, action.payload]\r\n//             };\r\n\r\n//         case 'form/deleteContact':\r\n//             const contactsList = state.contacts.filter(contact => contact.name !== action.payload.target.id);\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: contactsList\r\n//             };\r\n        \r\n//         case 'filter/changeFilter':\r\n//             return {\r\n//                 ...state,\r\n//                 filter: action.payload.target.value\r\n//             };\r\n        \r\n//         case 'page/pageLoaded':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: action.payload\r\n//             }\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// const store = createStore(reducer, composeWithDevTools());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}